{
    "display" : ["name", "synopsis", "options", "extraoption", "description", "examples"],
    "notitle": ["extraoption"],
    "notab":["examples", "extraexamples"],
    "name" : "ares-generate - Generate files for a webOS app or service",
    "synopsis" : {
        "default" : [
            "ares-generate [OPTION...] <APP_DIR>"
        ]
    },
    "description" : [
        "This command generates files from the template.",
        "",
        "APP_DIR is the app directory. It will be created if it does not exist.",
        "",
        "PROPERTY defines properties to be used during generation",
        "Properties can be specified as key-value pairs of the form \"key=value\"",
        "or as JSON objects of the form \"{'key':'value', 'key2':'value2', ...}\".",
        "Surrounding quotes are required in both cases.",
        "",
        "LEVEL is priority of logs. (e.g., silly, verbose, info, warn, error)"
    ],
    "examples" : [
        {
            "default" : [
                "# Create a webOS app in ~/project/app and set the id, version, title",
                "ares-generate -t webapp -p \"{'id':'com.domain.app', 'version':'1.0.0', 'title':'First App'}\" ~/projects/app",
                " Or",
                "ares-generate -t webapp -p \"id=com.domain.app\" -p \"version=1.0.0\" -p \"title=First App\" ~/projects/app",
                "",
                "# Create a webOS service named 'com.domain.app.service'",
                "ares-generate -t js_service -s \"com.domain.app.service\" ~/projects/service",
                ""
            ]
        }
    ],
    "options" : {
        "cmdOpt":"option",
        "default" : ["template", "list", "property", "servicename", "overwrite", "help", "version", "verbose", "level"],
        "template" : [
            "-t, --template <TEMPLATE> @TAB@ Use the template named TEMPLATE"
        ],
        "list" : [
            "-l, --list @TAB@ List the available templates"
        ],
        "property" : [
            "-p, --property <PROPERTY> @TAB@ Set the properties of appinfo.json, services.json or packageinfo.json"
        ],
        "servicename" : [
            "-s, --servicename <SERVICE_NAME> @TAB@ Set the servicename for webOS service"
        ],
        "overwrite" : "-f, --overwrite @TAB@ Overwrite existing files",
        "help" : "-h, --help @TAB@ Display this help",
        "version" : "-V, --version @TAB@ Display version info",
        "verbose" : "-v @TAB@ Display this verbose log",
        "level" : "--level <LEVEL> @TAB@ Set log LEVEL and display log as set LEVEL"
    }
}
